Link to the problem: https://practice.geeksforgeeks.org/problems/spirally-traversing-a-matrix-1587115621/1/

public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int>> matrix, int r, int c) 
    {
        vector<int> ans;
   
        int rowStart = 0;
        int rowEnd = r-1;
        int colStart = 0;
        int colEnd = c-1;

        while(rowStart <=rowEnd && colStart<=colEnd){
            for(int i=colStart; i<=colEnd; i++){
                ans.push_back(matrix[rowStart][i]);
            }
            rowStart++;
            if(rowStart>rowEnd || colStart>colEnd)
                break;
            for(int i=rowStart; i<=rowEnd; i++){
                ans.push_back(matrix[i][colEnd]);
            }
            colEnd--;
            if(rowStart>rowEnd || colStart>colEnd)
                break;

            for(int i = colEnd; i>=colStart; i--){
                ans.push_back(matrix[rowEnd][i]);
            }
            rowEnd--;
            if(rowStart>rowEnd || colStart>colEnd)
                break;

            for(int i = rowEnd; i>=rowStart; i--){
                ans.push_back(matrix[i][colStart]);
            }
            colStart++;
            if(rowStart>rowEnd || colStart>colEnd)
                break;
       }
       return ans;
   }