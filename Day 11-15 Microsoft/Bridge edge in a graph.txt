Link to the problem: https://practice.geeksforgeeks.org/problems/bridge-edge-in-graph/1

    int ans;
    int isBridge(int V, vector<int> adj[], int c, int d) 
    {
        // Code here
        vector<bool> visited(V,false);
        ans=1;
        // for(int i=0;i<V;i+=1){
        //     for(int j = 0;j<adj[i].size();j+=1)
        //         cout<<adj[i][j]<<" ";
            
        //     cout<<endl;
            
        // }
        

        dfs(V,adj,visited,c,d,c);
        
        return ans;
    }
    
    void dfs(int V,vector<int> adj[],vector<bool> &visited,int c,int d,int node)
    {
        if(node==d){
            ans=0;
            return;
        }
        
        visited[node]=true;
        for(auto n:adj[node])
        {
            if((n==c and node==d)or(n==d and node==c) or visited[n])
                continue;
            
            dfs(V,adj,visited,c,d,n);
            
        }
        
        
    }