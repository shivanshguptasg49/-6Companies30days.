Link to the problem: https://practice.geeksforgeeks.org/problems/serialize-and-deserialize-a-binary-tree/1# 

class Solution
{
    public:
    //Function to serialize a tree and return a list containing nodes of tree.
    vector<int>v;
    void solve(Node* root)
    {
        if(root==NULL)
            return;
        
        solve(root->left);
        v.push_back(root->data);
        solve(root->right);
    }
    vector<int> serialize(Node *root) 
    {
        solve(root);
        return v;
    }
    
    //Function to deserialize a list and construct the tree.
    Node * deSerialize(vector<int> &A)
    {
       struct Node*newRoot = new Node(-1);
       Node* temp = newRoot;
       int n = A.size();
       for(int i = 0; i<n; i++)
       {
           temp->right = new Node(A[i]);
           temp = temp->right;
       }
       return newRoot->right;
    }

};