Link to the question: https://practice.geeksforgeeks.org/problems/maximum-profit4657/1

class Solution {
  public:
    int maxProfit(int K, int N, int A[]) {
        if(K==0 || N<=1)
            return 0;
        
        if(2*K>N)
        {
            int max_profit = 0;
            for(int i=1;i<N;i++)
                if(A[i]>A[i-1])
                    max_profit+=(A[i]-A[i-1]);
            return max_profit;
        }
        

        int t[2*K+1];
        t[0]=-A[0];
        for(int i=1;i<=2*K;i++)
        {
            if(i%2==0)  
                t[i]=INT_MIN;
            else    
                t[i]=0;
        }
        
        for(int i=0;i<N;i++)
        for(int j=0;j<=2*K;j++)
        {
            if(j==0)
                t[j]=max(t[j],-A[i]);
            else if(j%2==0)         
                t[j]=max(t[j],t[j-1]-A[i]);
            else                   
                t[j]=max(t[j],t[j-1]+A[i]);
        }
        return t[2*K-1];
    }
};