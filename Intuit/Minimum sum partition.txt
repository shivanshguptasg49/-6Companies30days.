Link to the problem: https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1/

int minDifference(int arr[], int n)  { 
	    int range=0;
	    for(int i=0; i<n; i++){
	        range+=arr[i];
	    }
	    
	    bool t[n+1][range+1];
	    for(int i=0; i<=n;i++)
	        t[i][0]=true;
	    for(int i=1; i<=range; i++)
	        t[0][i]=false;
	        
	    for(int i=1; i<=n; i++){
	        for(int j=1; j<=range; j++){
	            if(arr[i-1]>j)
	                t[i][j]=t[i-1][j];
	            else
	                t[i][j]=t[i-1][j] || t[i-1][j-arr[i-1]];
	        }
	    }
	    int mn=range;
	    for(int i=0; i<=range/2; i++){
	        if(t[n][i])
	            mn=min(mn,range-2*i);
	    }
	    return mn;
	    
	} 